1.flowable默认实现idm
包文件 flowable-idm-engine-6.7.2.jar
用户管理接口 org.flowable.idm.engine.impl.persistence.entity.data.UserDataManager
默认实现类 org.flowable.idm.engine.impl.persistence.entity.data.impl.MybatisUserDataManager
SQL定义XML文件  org.flowable.idm.db.mapping.entity.User.xml

其他接口如组管理、用户组管理、权限映射管理参考用户管理

2.自定义实现
继承MybatisUserDataManager，重写需要自定义的方法

@Service
public class FlowUserDataManager extends MybatisUserDataManager {

	//引入自身的用户服务
	//其中包含查询自己的用户数据的方法
    @Resource
    private FlowUserService userService;

    public FlowUserDataManager(IdmEngineConfiguration idmEngineConfiguration) {
        super(idmEngineConfiguration);
    }

    @Override
    public List<User> findUserByQueryCriteria(UserQueryImpl query) {
		//自身的用户类，从flowable传入的条件中提取所需的数据并组装查询数据
		//此处条件可以参考sql定义文件
        FlowUserDTO user = new FlowUserDTO();
        user.setUid(query.getId());
        user.setUid(query.getIdIgnoreCase());
        user.setUsername(query.getFirstName());
        user.setUsername(query.getLastName());
        user.setUsername(query.getDisplayName());
        user.setUsernameLike("%" + query.getFirstNameLike() + "%");
        user.setUsernameLike("%" + query.getFirstNameLikeIgnoreCase() + "%");
        user.setEmail(query.getEmail());
        user.setEmailLike("%" + query.getEmailLike() + "%");
        return userService.findUsers(user);
    }
}

3.定义bean
@Configuration(proxyBeanMethods = false)
public class FlowableConfig {
    @Resource
    private FlowUserDataManager flowUserDataManager;

    @Bean
    public EngineConfigurationConfigurer<SpringIdmEngineConfiguration> hzfqIdmEngineConfigurer() {
        return idmEngineConfiguration -> {
			//指定自定义的数据管理类
            idmEngineConfiguration.setUserDataManager(flowUserDataManager);
        };
    }
}

4.集成flowable,flowable-ui依赖
<dependency>
    <groupId>org.flowable</groupId>
    <artifactId>flowable-spring-boot-starter</artifactId>
</dependency>
<dependency>
    <groupId>org.flowable</groupId>
    <artifactId>flowable-spring-boot-starter-ui-task</artifactId>
</dependency>
<dependency>
    <groupId>org.flowable</groupId>
    <artifactId>flowable-spring-boot-starter-ui-modeler</artifactId>
</dependency>
<dependency>
    <groupId>org.flowable</groupId>
    <artifactId>flowable-spring-boot-starter-ui-idm</artifactId>
</dependency>
<dependency>
    <groupId>org.flowable</groupId>
    <artifactId>flowable-spring-boot-starter-ui-admin</artifactId>
</dependency>
